<?xml version="1.0" encoding="utf-8"?>
<!--
  **************************************************-
  InGrid-iPlug CKAN
  ==================================================
  Copyright (C) 2014 - 2015 wemove digital solutions GmbH
  ==================================================
  Licensed under the EUPL, Version 1.1 or â€“ as soon they will be
  approved by the European Commission - subsequent versions of the
  EUPL (the "Licence");
  
  You may not use this work except in compliance with the Licence.
  You may obtain a copy of the Licence at:
  
  http://ec.europa.eu/idabc/eupl5
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the Licence is distributed on an "AS IS" basis,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the Licence for the specific language governing permissions and
  limitations under the Licence.
  **************************************************#
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xsi:schemaLocation="http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

    <!-- SEARCH / INDEX CONFIGURATION -->
    
    <!-- CONNECT BEANS FOR READING DATABASE AND MAPPING INTO INDEX -->
    <bean id="dscDocumentProducer" class="de.ingrid.iplug.dsc.index.DscDocumentProducer">
        <property name="recordSetProducer" ref="recordSetProducer" />
        <property name="recordMapperList">
            <list>
                <ref bean="recordMapper"/>
                <!-- PUT IDF ALSO INTO INDEX -->
                <ref bean="idfProducerIndexMapper"/>
            </list>
        </property>
        <property name="indexInfo" ref="indexInfo"></property>
    </bean>
    
    <!-- GENERAL INFO ABOUT INDEX -->
    <bean id="indexInfo" class="de.ingrid.admin.elasticsearch.IndexInfo">
        <property name="toIndex" value="[YOUR INDEX NAME, free value]" />
        <property name="toType" value="[YOUR INDEX CATEGORY, free value for separating index, e.g. object or address]" />
        <property name="docIdField" value="[FIELDNAME OF RECORD ID IN INDEX]" />
    </bean>

    <!-- READ DATABASE -->
    <bean id="recordSetProducer" class="de.ingrid.iplug.dsc.index.producer.PlugDescriptionConfiguredDatabaseRecordSetProducer">
        <property name="recordSql" value="SELECT DISTINCT id FROM [YOUR TABLE NAME]" />
    </bean>

    <!-- MAP INTO INDEX VIA SCRIPT -->
    <bean id="recordMapper" class="de.ingrid.iplug.dsc.index.mapper.ScriptedDocumentMapper">
        <property name="mappingScripts">
            <list>
                <!-- EXAMPLE SCRIPTS FROM conf/mapping -->
	    		<value>classpath:mapping/global.js</value>
	    		<value>classpath:mapping/example_to_lucene.js</value>
            </list>
        </property> 
        <property name="compile" value="true" />
    </bean>

    <!-- ALSO PUT DETAIL DATA (IDF) INTO INDEX -->
    <!-- Creates an IDF document via creator below and adds it to the index in field 'idf'. -->
    <bean id="idfProducerIndexMapper" class="de.ingrid.iplug.dsc.index.mapper.IdfProducerDocumentMapper">
        <property name="dscRecordCreator" ref="dscRecordCreator" />
    </bean>

    <!-- CONNECT BEANS FOR GENERATING DETAIL DATA (IDF) -->
    <bean id="dscRecordCreator" class="de.ingrid.iplug.dsc.record.DscRecordCreator">
        <property name="recordProducer" ref="recordProducer" />
        <property name="record2IdfMapperList">
            <list>
                <ref bean="createIdfMapper"/>
                <ref bean="scriptedIdfMapper"/>
            </list>
        </property>
    </bean>
    
    <!-- READ RECORD ID FROM INDEX, FIELDNAME ALSO SPECIFIED ABOVE -->
    <bean id="recordProducer" class="de.ingrid.iplug.dsc.record.producer.PlugDescriptionConfiguredDatabaseRecordProducer">
        <property name="indexFieldID" value="[FIELDNAME OF RECORD ID IN INDEX]" />
    </bean>
    
    <!-- BASIC STRUCTURE OF DETAIL DATA (IDF) -->
    <bean id="createIdfMapper" class="de.ingrid.iplug.dsc.record.mapper.CreateIdfMapper"/>

    <!-- EXTEND DETAIL DATA VIA SCRIPTS -->
    <bean id="scriptedIdfMapper" class="de.ingrid.iplug.dsc.record.mapper.ScriptedIdfMapper">
        <property name="mappingScripts">
            <list>
                <!-- EXAMPLE SCRIPTS FROM conf/mapping -->
	    		<value>classpath:mapping/global.js</value>
	    		<value>classpath:mapping/example_to_idf.js</value>
            </list>
        </property> 
        <property name="compile" value="true" />
    </bean>

</beans>
